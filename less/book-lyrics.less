.sticky-lyrics {
    .sticky-mixin;

    .wrapper-width {
        width: 100%;

        div[class^="lyrics-song"] {
            @lyrics-header-size: 1.5em;
            @lyrics-verse-size: 0.85em;
            @phone-folded-column-width: 50px;

            // FIXME: Is this value needed? It isn't presently used other than
            // to position folded right doublespeaker column from bottom.
            @phone-folded-column-height: 60px;

            @phone-column-height: calc(100vh ~"-" @phone-stuck-nav-height);
            @phone-doublespeaker-column-height: calc(50vh ~"-" @phone-stuck-nav-height * 0.5);

            .expand-columns-button-mixin {
                position: absolute;
                top: 40px;
            }

            background-color: brown;
            position: absolute;
            width: @phone-lyrics-column-width;

            @media @tablets {
                width: 27%;
            }

            @media @desktops {
                width: 27%;
            }

            z-index: @lyrics-z-index;

            max-height: @phone-column-height;

            @media @phones {
                &.doublespeaker {
                    max-height: @phone-doublespeaker-column-height;
                }
            }

            overflow: auto;

            .transition(~"width 0.2s ease, top 0.1s ease, left 0.1s ease, right 0.1s ease");

            &.lyrics-column-left {
                left: 0;

                @media @tablets {
                    left: 0;
                }

                @media @desktops {
                    left: 0;
                }

                &.unshown {
                    left: -@phone-lyrics-column-width;
                }

                .toggle-fold-button {
                    right: 10px;
                }

                .expand-columns-button {
                    .expand-columns-button-mixin;
                    right: 0;
                }
            }

            &.lyrics-column-right {
                right: 0;


                @media @tablets {
                    right: 0;
                }

                @media @desktops {
                    right: 0;
                }

                @media @phones {
                    &.doublespeaker {
                        top: @phone-doublespeaker-column-height;
                    }
                }

                &.unshown {
                    right: -@phone-lyrics-column-width;
                }

                .toggle-fold-button {
                    left: 10px;
                }

                .expand-columns-button {
                    .expand-columns-button-mixin;
                    left: 0;
                }
            }

            .toggle-fold-button {
                position: absolute;
                top: 10px;
            }

            .lyrics-text {
                .lyrics-header {
                    font-size: @lyrics-header-size;
                }

                .lyrics-verses {
                    font-size: @lyrics-verse-size;

                    &.foldable-area {
                        .transition(max-height 0.15s ease);
                        max-height: 100vh;
                    }

                    [class^="stanza"] {
                        &:not(:last-child) {
                            margin-bottom: @lyrics-verse-size;
                        }

                        [class^="verse"] {
                            @hanging-indent-width: 1.5em;
                            padding-left: @hanging-indent-width;
                            text-indent:-@hanging-indent-width;
                        }
                    }
                }
            }

            /**
             * Setting values for expanded lyrics columns.
             * FIXME: Is there a more efficient way to do this?
             */
            &.expanded {
                @expanded-lyrics-header-size: @lyrics-header-size * 1.5;
                @expanded-lyrics-verse-size: @lyrics-verse-size * 1.5;

                @media @tablets {
                    @expanded-lyrics-column-width: @lyrics-column-width * 1.8;

                    width: @expanded-lyrics-column-width;

                    &.lyrics-column-left {
                        &.unshown {
                            left: -@expanded-lyrics-column-width;
                        }
                    }

                    &.lyrics-column-right {
                        &.unshown {
                            right: -@expanded-lyrics-column-width;
                        }
                    }
                }

                @media @desktops {

                }

                .lyrics-text {
                    .lyrics-header {
                        font-size: @expanded-lyrics-header-size;
                    }

                    .lyrics-verses {
                        font-size: @expanded-lyrics-verse-size;

                        [class^="stanza"] {
                            &:not(:last-child) {
                                margin-bottom: @expanded-lyrics-verse-size;
                            }
                        }
                    }
                }
            }

            &.folded {
                overflow-y: hidden;

                @media @phones {

                    &.lyrics-column-left {
                        left: calc(@phone-folded-column-width ~"-" @phone-lyrics-column-width);
                    }

                    &.lyrics-column-right {
                        right: calc(@phone-folded-column-width ~"-" @phone-lyrics-column-width);

                        &.doublespeaker {
                            top: calc(100vh ~"-" @phone-stuck-nav-height ~"-" @phone-folded-column-height);
                        }
                    }
                }

                .lyrics-text {

                    .lyrics-verses {

                        &.foldable-area {
                            max-height: 0;
                        }
                    }
                }
            }
        }
    }

    &.stuck {
        top: @phone-stuck-nav-height;

        @media @desktops {
            top: 0;
        }
    }
}

.example-enter {
    opacity: 0.01;
    .transition(opacity 1.5s ease-in);
}

.example-enter.example-enter-active {
    opacity: 1;
}

.example-leave {
    opacity: 1;
    .transition(opacity 1.5s ease-in);
}

.example-leave.example-leave-active {
    opacity: 0.01;
}