var ReactCSSTransitionGroup=React.addons.CSSTransitionGroup,GlobalManager={hasParentWithTagName:function(a,b){for(var c=a.parentNode;null!==c;){if(c.tagName&&c.tagName.toLowerCase()===b)return!0;c=c.parentNode}return!1}},ProgressManager={getMaxTotalNeededHoursFromSongs:function(a){return a.reduce(function(a,b){var c=this.calculateSumTask(b.tasks).neededHours;return Math.max(c,a)}.bind(this),0)},getMaxTotalNeededHoursFromTasks:function(a){return a.reduce(function(a,b){var c=b.neededHours;if(b.subtasks){var d=this.getMaxTotalNeededHoursFromTasks(b.subtasks);c=Math.max(d,c)}return Math.max(a,c)}.bind(this),0)},calculateSumTask:function(a){var b={workedHours:0,neededHours:0};return a?a.reduce(function(a,b){if(b.subtasks){var c=this.calculateSumTask(b.subtasks);b=this._addTwoTasks(c,b)}return this._addTwoTasks(a,b)}.bind(this),b):b},calculateSumAllTasks:function(a){var b={workedHours:0,neededHours:0};return a.reduce(function(a,b){return this._addTwoTasks(a,this.calculateSumTask(b.tasks))}.bind(this),b)},_addTwoTasks:function(a,b){return a?b?{workedHours:a.workedHours+b.workedHours,neededHours:a.neededHours+b.neededHours}:a:b}},TextFormatter={getFormattedSpan:function(a,b,c,d){return c=c||0,d=d||0,Array.isArray(a)?React.createElement("span",{key:d+"-"+c},a.map(function(a,c){return this.getFormattedSpan(a,b,c,d+1)}.bind(this))):"string"==typeof a||"object"==typeof a?this._getTaggedTextContent(a,b,c,d):void 0},_getTaggedTextContent:function(a,b,c,d){if("string"==typeof a)return React.createElement("span",{key:d+"-"+c},c>0?" ":"",a);if("object"==typeof a){if(a.italic)return React.createElement("i",{key:d+"-"+c},this.getFormattedSpan(a.italic,b,c,d));if(a.emphasis)return React.createElement("em",{key:d+"-"+c},this.getFormattedSpan(a.emphasis,b,c,d));if(a.anchor)return React.createElement("a",{key:d+"-"+c,onClick:b.bind(null,a.annotationKey)},this.getFormattedSpan(a.anchor,b,c,d))}}},PopupMixin={resetUserInteractionWithPopups:function(){this.setState({clickedOn:!1,hoveredOn:!1,touched:!1})},enableHoverability:function(a){this.setState({hoverable:"one"===this.props.popupsAlwaysShown?!0:a})},_addToStateForPopup:function(a){return a.clickedOn=!1,a.hoverable=!0,a.hoveredOn=!1,a.touched=!1,a},_handleTouch:function(a){this.setState({touched:a})},_handlePopupClick:function(a){if("all"!==this.props.popupsAlwaysShown){if(this.state.clickedOn&&this.state.shownPopupIndex!==a)this.setState({shownPopupIndex:a});else{var b=!this.state.clickedOn;this.props._enableHoverability&&this.props._enableHoverability(!b),this.props._resetAllOtherPopups&&this.props._resetAllOtherPopups(),this.setState({clickedOn:b,shownPopupIndex:a})}this.props._updateShownPopupIndex&&this.props._updateShownPopupIndex(a),this._handleTouch(!1)}},_handlePopupHover:function(a){"all"!==this.props.popupsAlwaysShown&&this.state.hoverable&&!this.state.touched&&("number"==typeof a?(this.setState({hoveredOn:!0,shownPopupIndex:a}),this.props._resetAllOtherPopups&&this.props._resetAllOtherPopups()):this.setState({hoveredOn:!1}))},_showPopup:function(a){return"all"===this.props.popupsAlwaysShown?!0:this.state.clickedOn||this.state.hoveredOn||"one"===this.props.popupsAlwaysShown?this.state.shownPopupIndex===a:!1},_getPopup:function(a,b,c,d){var e=this._showPopup(b),f=a+"-"+b+" popup"+(e?" expanded":"")+(e&&("none"!==this.props.popupsAlwaysShown||this.state.clickedOn)?" engraved":""),g=TextFormatter.getFormattedSpan(c),h=TextFormatter.getFormattedSpan(d);return React.createElement("li",{className:f,key:a+"-"+b,onClick:this._handlePopupClick.bind(null,b),onMouseEnter:this._handlePopupHover.bind(null,b),onMouseLeave:this._handlePopupHover.bind(null,!1),onTouchStart:this._handleTouch.bind(null,!0)},e||!d?g:h)}},DevAnnotationField=React.createClass({getDefaultProps:function(){return{annotationSpan:null}},render:function(){return React.createElement("div",{className:"dev-annotation-field"},React.createElement("h2",null,"annotation"),this.props.annotationSpan)}}),DevApp=React.createClass({getDefaultProps:function(){return{title:"Yearling's Bobtail",songs:[],speechBubbles:[]}},getInitialState:function(){var a=window.sessionStorage.playedSongIndex?parseInt(window.sessionStorage.playedSongIndex):-1;return{playedSongIndex:a,annotationSpan:null}},componentDidMount:function(){document.body.addEventListener("click",this._handleBodyClick)},componentWillUnmount:function(){document.body.removeEventListener("click",this._handleBodyClick)},_handleBodyClick:function(a){var b=document.getElementById("annotation");!b||b===a.target||b.contains(a.target)||GlobalManager.hasParentWithTagName(a.target,"a")||this.setState({annotationSpan:null})},handleSongChange:function(a){a>=0&&a<this.props.songs.length&&(window.sessionStorage.playedSongIndex=a,this.setState({playedSongIndex:a,annotationSpan:null}))},handleAnnotationSelect:function(a){var b=this.props.songs[this.state.playedSongIndex].annotations[a].description,c=TextFormatter.getFormattedSpan(b);this.setState({annotationSpan:c})},render:function(){var a=this.state.playedSongIndex,b=(a>=0?this.props.songs[a].title:null,a>=0?this.props.songs[a].speechBubbles:this.props.speechBubbles),c=a>=0?this.props.songs[a].tasks:null,d=a>=0?this.props.songs[a].lyrics:null,e=!!this.state.annotationSpan;return React.createElement("div",{className:"dev-app"},React.createElement("div",{className:"dev-app-column songs-column"},React.createElement("h1",null,this.props.title),React.createElement(DevSongsField,{songs:this.props.songs,playedSongIndex:a,handleSongChange:this.handleSongChange})),React.createElement("div",{className:"dev-app-column notes-column"},React.createElement(ReactCSSTransitionGroup,{transitionName:"annotation-animation",transitionEnterTimeout:100,transitionLeaveTimeout:100},e?React.createElement("div",{key:"annotation",id:"annotation",className:"notes-row annotation-row"},React.createElement(DevAnnotationField,{annotationSpan:this.state.annotationSpan})):null),React.createElement("div",{className:"notes-row speech-bubbles-row"},React.createElement(DevSpeechBubblesField,{playedSongSpeechBubbles:b}),c?React.createElement(DevProgressField,{tasks:c}):null)),a>=0?React.createElement("div",{className:"dev-app-column lyrics-column"},React.createElement(DevLyricsField,{playedSongLyrics:d,handleAnnotationSelect:this.handleAnnotationSelect})):null)}}),DevLyricsColumn=React.createClass({getDefaultProps:function(){return{columnIndex:"left",columnTitle:"",playedSongLyrics:[],handleAnnotationSelect:function(){}}},_parseLyric:function(a){a.annotation;return TextFormatter.getFormattedSpan(a.verse,this.props.handleAnnotationSelect)},render:function(){var a=this.props.columnIndex,b=this.props.columnTitle?React.createElement("h3",null,this.props.columnTitle):null,c=this.props.columnTitle?" doublespeaker":"",d="right speaker"===this.props.columnTitle?" align-right":"",e="dev-lyrics-column "+a+c+d,f=React.createElement("div",{className:"lyrics-text"},this.props.playedSongLyrics.map(function(a,b){return React.createElement("div",{className:"stanza-"+b,key:b},a.map(function(a,b){return React.createElement("div",{className:"verse-"+b,key:b},this._parseLyric(a))},this))},this));return React.createElement("div",{className:e},b,f)}}),LYRICS_COLUMN_NAMES=["left","right"],DevLyricsField=React.createClass({getDefaultProps:function(){return{playedSongLyrics:"",handleAnnotationSelect:function(){}}},render:function(){var a=Object.keys(this.props.playedSongLyrics),b=LYRICS_COLUMN_NAMES.filter(function(b){return-1!==a.indexOf(b)}),c=this.props.playedSongLyrics.left&&this.props.playedSongLyrics.right;return lyricsColumns=b.map(function(a,b){return React.createElement(DevLyricsColumn,{key:a,columnIndex:a,columnTitle:c?a+" speaker":null,playedSongLyrics:this.props.playedSongLyrics[a],handleAnnotationSelect:this.props.handleAnnotationSelect})},this),React.createElement("div",{className:"dev-lyrics-field"},React.createElement("h2",null,"lyrics"),React.createElement("div",{className:"dev-lyrics-columns"},lyricsColumns))}}),DevProgressBar=React.createClass({getDefaultProps:function(){return{sumTask:{workedHours:0,neededHours:0},maxTotalNeededHours:0}},render:function(){var a,b,c=this.props.sumTask;return a={width:c.workedHours/(c.neededHours||.01)*100+"%"},b={width:c.neededHours/(this.props.maxTotalNeededHours||.01)*100+"%"},React.createElement("div",{className:"total-progress-bar",style:b},React.createElement("div",{className:"filled-progress-bar",style:a}))}}),DevProgressField=React.createClass({_maxTotalNeededHours:0,getDefaultProps:function(){return{tasks:[]}},componentWillMount:function(){this._maxTotalNeededHours=ProgressManager.getMaxTotalNeededHoursFromTasks(this.props.tasks)},componentWillUpdate:function(a){this._maxTotalNeededHours=ProgressManager.getMaxTotalNeededHoursFromTasks(a.tasks)},_getProgressBar:function(a){return React.createElement(DevProgressBar,{sumTask:a,maxTotalNeededHours:this._maxTotalNeededHours})},_getTaskSubrow:function(a,b,c){var d=c?"dev-subtask-subrow":"dev-task-subrow";return React.createElement("div",{key:b,className:d},this._getProgressBar(a),React.createElement("div",{className:"dev-task-text-wrapper"},React.createElement("span",{className:"text-cell name"},a.taskName),a.neededHours?React.createElement("span",{className:"text-cell progress"},a.workedHours,"/",a.neededHours):null))},_getSubtaskRow:function(a){if(a){var b=a.map(function(a,b){return this._getTaskSubrow(a,b,!0)},this);return React.createElement("div",{className:"dev-subtask-row"},b)}return null},render:function(){var a=this.props.tasks,b=ProgressManager.calculateSumTask(a);return taskRows=a.map(function(a,b){var c=this._getTaskSubrow(a,b,!1),d=this._getSubtaskRow(a.subtasks);return React.createElement("div",{key:b,className:"dev-task-row"},c,d)},this),b=ProgressManager.calculateSumTask(a),taskFooter=React.createElement("div",{key:"footer",className:"dev-task-row"},React.createElement("div",{className:"dev-task-subrow"},React.createElement("div",{className:"dev-task-text-wrapper"},React.createElement("span",{className:"task-placeholder"}),b.neededHours?React.createElement("h3",{className:"text-cell progress"},b.workedHours,"/",b.neededHours):null))),React.createElement("div",{className:"dev-progress-field"},React.createElement("h2",null,"progress"),taskRows,taskFooter)}}),DevSongRow=React.createClass({getDefaultProps:function(){return{songIndex:-1,songTitle:"",sumTask:{workedHours:0,neededHours:0},maxTotalNeededHours:0,isHeader:!1,isFooter:!1,isSelected:!1,handleSongChange:function(){}}},_getSongContent:function(a){return React.createElement("div",{className:"dev-song-text-wrapper"},React.createElement("a",{className:"text-cell button",onClick:this.props.handleSongChange.bind(null,this.props.songIndex)},this.props.songIndex+1,". ",this.props.songTitle),React.createElement("span",{className:"text-cell progress"},a.workedHours,"/",a.neededHours))},_getHeaderContent:function(){return React.createElement("div",{className:"dev-song-text-wrapper"},React.createElement("h3",{className:"text-cell button-label"},"Song"),React.createElement("h3",{className:"text-cell progress"},"Progress"))},_getFooterContent:function(a){return React.createElement("div",{className:"dev-song-text-wrapper"},React.createElement("span",{className:"button-placeholder"}),React.createElement("h3",{className:"text-cell progress"},a.workedHours,"/",a.neededHours))},render:function(){var a,b=this.props.sumTask,c="dev-song-row"+(this.props.isSelected?" played":""),d=this.props.isHeader||this.props.isFooter?null:React.createElement(DevProgressBar,{sumTask:b,maxTotalNeededHours:this.props.maxTotalNeededHours});return a=this.props.isHeader?this._getHeaderContent():this.props.isFooter?this._getFooterContent(b):this._getSongContent(b),React.createElement("div",{className:c},d,a)}}),DevSongsField=React.createClass({_maxTotalNeededHours:0,getDefaultProps:function(){return{songs:[],playedSongIndex:-1,handleSongChange:function(){}}},componentWillMount:function(){this._maxTotalNeededHours=ProgressManager.getMaxTotalNeededHoursFromSongs(this.props.songs)},render:function(){var a=this.props.songs,b=React.createElement(DevSongRow,{key:"header",isHeader:!0}),c=a.map(function(a,b){var c=this.props.playedSongIndex===b,d=ProgressManager.calculateSumTask(a.tasks);return React.createElement(DevSongRow,{key:b,songIndex:b,songTitle:a.title,sumTask:d,maxTotalNeededHours:this._maxTotalNeededHours,isSelected:c,handleSongChange:this.props.handleSongChange})},this),d=ProgressManager.calculateSumAllTasks(a),e=React.createElement(DevSongRow,{key:"footer",isFooter:!0,sumTask:d});return React.createElement("div",{className:"dev-songs-field"},b,c,e)}}),SPEECH_BUBBLE_NAMES=["narrative","backstory"],DevSpeechBubblesField=React.createClass({getDefaultProps:function(){return{playedSongSpeechBubbles:{}}},render:function(){var a=SPEECH_BUBBLE_NAMES.map(function(a,b){return React.createElement("div",{key:b,className:"speech-bubble "+a},React.createElement("h2",null,a),TextFormatter.getFormattedSpan(this.props.playedSongSpeechBubbles[SPEECH_BUBBLE_NAMES[b]]))},this);return React.createElement("div",{className:"dev-speech-bubbles-field"},a)}}),config=album,wrapper,lyricsColumns;config.windowHeight=window.innerHeight,config.windowWidth=window.innerWidth,wrapper=ReactDOM.render(React.createElement(DevApp,config),document.getElementById("container"));