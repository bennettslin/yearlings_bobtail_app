// This value *must* be the same in js.
@minWidth__carouselAnnotation:
    @width__annotationCard
    + @paddingX__annotationCard * 2
    + @paddingX__carouselAnnotation * 2
    + @padding__annotation * 2;

@minWidth__carouselAnnotation__mini:
    @width__annotationCard__mini
    + @paddingX__annotationCard * 2
    + @paddingX__carouselAnnotation * 2
    + @padding__annotation * 2;

.AnnotationCard {
    position: relative;
    padding: 0 @paddingX__annotationCard;

    min-height: 0;
    max-height: 0;
    opacity: 0;

    transition:
        min-height @animationDuration__default,
        max-height @animationDuration__default,
        margin @animationDuration__default,
        padding @animationDuration__default,
        opacity @animationDuration__default,
        box-shadow @animationDuration__default;

    .text-shadow-mixin(@colour__annotationCard);

    // Select for annotation card dots, not portal dots.
    > .dots-block {
        position: absolute;
        height: @length__annotationDot;
    }

    .overrideAnimate
    & {
        transition: none;
    }
}

.DomManager.narrative .AnnotationCard.narrative,
.DomManager.backstory .AnnotationCard.backstory,
.DomManager.observation .AnnotationCard.observation,
.DomManager.pun .AnnotationCard.pun,
.DomManager.reference .AnnotationCard.reference,
.DomManager.songwriting .AnnotationCard.songwriting,
.DomManager.portal .AnnotationCard.portal,
.DomManager.afterword .AnnotationCard.afterword {

    padding: @paddingX__annotationCard;
    min-height: @length__annotationDot;
    max-height: 500px; // Arbitrary large number.
    opacity: 1;
    box-shadow: @boxShadow__annotationCard;

    &:not(:last-child) {
        margin-bottom: @padding__annotation;
    }
}

// Override if in carousel and hidden by single lyric column.
.CarouselAnnotation {

    ._rightLyricColumnOnly_
    &.CarouselAnnotation__inLyricColumn__left,
    ._leftLyricColumnOnly_
    &.CarouselAnnotation__inLyricColumn__right {
        opacity: 0;

        .AnnotationCard {
            margin: auto;
            opacity: 0;
            box-shadow: none;
        }
    }
}

// .in-carousel-width {
//     /**
//      * Needed in carousel for proper layout.
//      */
//     width: @width__annotationCard + @paddingX__annotationCard * 2;

//     ._mini_
//     & {
//         width: @width__annotationCard__mini +
//         @paddingX__annotationCard * 2;
//     }
// }

// FIXME: There should be a better way to handle carousel sizing and layout. Afterwards, the in-carousel-width class might no longer be necessary.
// .cards-block {

//     ._desktop_
//     .Carousel
//     & {
//         margin-bottom: @paddingX__carouselAnnotation;
//     }
// }
