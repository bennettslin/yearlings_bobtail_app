// In main field.
.dots-overview-subfield {
    position: relative;
    padding: @dots-overview-padding 0;

    // Override subfield height. Let flex-grow take care of height.
    height: 0;
    flex-grow: 1;

    display: flex;

    // Ensure this is below lyrics but above popup wrappers.
    z-index: @zIndex__dotsOverviewSubfield;

    // Overview and dots toggle are at the bottom in tablet and mini.
    .is-tablet-or-mini
    & {
        .overview.popup-wrapper {
            bottom: 0;
        }
    }
}

// Toggle container.
.DotsOverviewToggleSection {
    position: relative;
    width: @OverviewToggle-width;

    transition: opacity @toggle-animation-duration,
                margin-left @toggle-animation-duration;

    opacity: 1;
    margin-left: 0;

    .laptop-width
    & {
        width: @OverviewToggle-laptop-width;
    }

    // In mobile, also hidden to left when lyric expanded.
    .is-mobile.lyric-expanded
    & {
        opacity: 0;
        margin-left: -@OverviewToggle-tablet-width;
    }
}

// Hidden to left when is logue, or annotation shown and carousel hidden.
.is-logue,
.annotation-shown.nav-expanded,
.Dots-shown,
.tips-shown {
    .DotsOverviewToggleSection {
        opacity: 0;
        margin-left: -@OverviewToggle-width;
    }
}

.DotsOverviewToggleSection,
.CarouselToggle-button-block {
    .is-mobile
    & {
        width: @OverviewToggle-tablet-width;
    }
}

.DotsOverviewToggleSection,
.DotsToggle-button-container {
    display: flex;
    flex-direction: column;

    .is-tablet-or-mini
    & {
        flex-direction: column-reverse;
    }
}

.OverviewToggle-button-container {
    position: relative;

    width: 100%;
    height: @OverviewToggle-height;

    // Ensure toggle button is above its popup container and the carousel.
    z-index: @zIndex__centreFieldChild;

    .laptop-width
    & {
        height: @OverviewToggle-laptop-height;
    }
}

.dots-subfield {
    position: absolute;
    left: 0;
    opacity: 0;
    margin-left: -@dots-subfield-margin;
    margin-top: @dots-subfield-margin / 2;
    z-index: @zIndex__dotsOverview;

    // TODO: Ideal for dots section to fade to halfway left, then move all the way out to prevent user interaction.
    transition: opacity @animationDuration__default,
                margin-left @animationDuration__slow,
                transform @animationDuration__slow;

    transform: translateX(-100%);

    box-shadow: @dots-subfield-box-shadow;
    background-color: @odd-verse-colour;

    .is-song.Dots-shown
    & {
        opacity: 1;
        margin-left: @dots-subfield-margin;
        transform: translateX(0);
    }

    .is-mobile
    & {
        top: auto;
        bottom: 0;

        margin-top: 0;
        margin-bottom: @dots-subfield-margin / 2;
    }
}