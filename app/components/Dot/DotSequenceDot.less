.SequenceDot {
    width: 0;
    height: 0;
    opacity: 0;

    // Specify to override simple background colour transition.
    &.bgColour__dot {
        // Increase width first, then fade in.
        transition:
            width @animationDuration__default,
            background-color @animationDuration__default,
            opacity @animationDuration__default @animationDuration__fast;
    }
}

.SequenceDot__annotationCard {
    height: @length__annotationDot;
}

.SequenceDot__textAnchor {
    height: @length__lyricAnchorDot;

    // TODO: Eventually put this in Anchor styling?

    .Anchor__selectable:hover
    & {
        animation: bounceHover @animationDuration__slow;
    }

    .Anchor__selectable:active
    & {
        transform: scale(0.8);
    }
}

/**
 * Styling if at least one sequence dot is selected. Nesting under parent for
 * clarity.
 */
.RM__narrative
    .styleIf__sequenceDot__narrative,
.RM__backstory
    .styleIf__sequenceDot__backstory,
.RM__observation
    .styleIf__sequenceDot__observation,
.RM__pun
    .styleIf__sequenceDot__pun,
.RM__reference
    .styleIf__sequenceDot__reference,
.RM__portal
    .styleIf__sequenceDot__portal,
.RM__songwriting
    .styleIf__sequenceDot__songwriting,
.RM__afterword
    .styleIf__sequenceDot__afterword {

    // Sequence dots show at all.
    &.SequenceDot {
        opacity: 1;
    }
    &.SequenceDot__annotationCard {
        width: @length__annotationDot;
    }
    &.SequenceDot__textAnchor {
        width: @length__lyricAnchorDot;
    }

    // Anchors show as more than text.
    &.Anchor__selectable.Anchor__styleOnlyWithSequenceDot {
        cursor: pointer;
    }
    .AnchorUnderline__styleOnlyWithSequenceDot {
        opacity: 1;
    }
}
