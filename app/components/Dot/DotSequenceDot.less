.SequenceDot {
    width: 0;
    height: 0;
    opacity: 0;

    // Specify to override default sole background colour transition.
    &.bgColour__dot {

        // Increase width first, then fade in.
        transition:
            width @animationDuration__default,
            background-color @animationDuration__default,
            opacity @animationDuration__default @animationDuration__fast;
    }
}

.SequenceDot__annotationCard {
    height: @length__annotationDot;
}

.SequenceDot__textAnchor {
    height: @length__lyricAnchorDot;

    // TODO: Eventually put this in Anchor styling?
    .Anchor__selectable:hover
    & {
        animation: bounceHover @animationDuration__slow;
    }

    .Anchor__selectable:active
    & {
        transform: scale(0.8);
    }
}

/**
 * Styling if at least one sequence dot is selected. Nesting under parent for
 * clarity.
 */
.RM__narrative .styleIf__narrative,
.RM__backstory .styleIf__backstory,
.RM__observation .styleIf__observation,
.RM__pun .styleIf__pun,
.RM__reference .styleIf__reference,
.RM__portal .styleIf__portal,
.RM__songwriting .styleIf__songwriting,
.RM__afterword .styleIf__afterword,
.styleIf__always {

    // Sequence dots show at all.
    &.SequenceDot {
        opacity: 1;
    }
    &.SequenceDot__annotationCard {
        width: @length__annotationDot;
    }
    &.SequenceDot__textAnchor {
        width: @length__lyricAnchorDot;
    }

    // Anchors show as more than text.
    &.Anchor__selectable {
        cursor: pointer;
    }
    .AnchorUnderline {
        opacity: 1;
    }

    .TextAnchor__selectable {
        color: @colour__textAnchor__link;

        .Anchor__selectable:hover
        & {
            color: @colour__textAnchor__hover;
        }

        .Anchor__selectable:active
        & {
            color: @colour__textAnchor__active;
        }
    }

    .TextAnchor__selected {
        color: @colour__textAnchor__selected;
    }

    .TextAnchor__accessed {
        .RM__accessOn
        & {
            color: @colour__textAnchor__accessedLink;
        }

        .RM__accessOn .Anchor__selectable:hover
        & {
            color: @colour__textAnchor__accessedHover;
        }

        .RM__accessOn .Anchor__selectable:active
        & {
            color: @colour__textAnchor__accessedActive;
        }
    }

}
