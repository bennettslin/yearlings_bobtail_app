@import "./DotAnchor.less";
@import "./DotSequence.less";

.Dot {
    width: 0;
    height: 0;

    opacity: 0;

    // Increase width first, then fade in.
    transition:
        width @animationDuration__default,
        opacity @animationDuration__default @animationDuration__fast;
}

.Dot__annotationCard__sequence {
    height: @length__annotationDot;
}

.Dot__textAnchor {
    height: @length__lyricAnchorDot;
}

.bgColour__portal {
    background-color: @Dot__portal;
}
.bgColour__observation {
    background-color: @Dot__observation;
}
.bgColour__backstory {
    background-color: @Dot__backstory;
}
.bgColour__reference {
    background-color: @Dot__reference;
}
.bgColour__pun {
    background-color: @Dot__pun;
}
.bgColour__narrative {
    background-color: @Dot__narrative;
}
.bgColour__songwriting {
    background-color: @Dot__songwriting;
}
.bgColour__afterword {
    background-color: @Dot__afterword;
}

.RM__narrative .Dot__narrative,
.RM__backstory .Dot__backstory,
.RM__observation .Dot__observation,
.RM__pun .Dot__pun,
.RM__reference .Dot__reference,
.RM__songwriting .Dot__songwriting,
.RM__afterword .Dot__afterword {

    opacity: 1;

    &.Dot__annotationCard__sequence {
        width: @length__annotationDot;
    }

    &.Dot__textAnchor {
        width: @length__lyricAnchorDot;
    }
}