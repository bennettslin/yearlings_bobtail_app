// Constants prefixed with js *must* be the same in JavaScript.
@js__margin__menuChild: 10px;
@js__margin__menuChild__narrow: 3px;
@js__height__menu: 72px;
@js__minWidth__childTitle: 72px;

// This works out to 50px;
@js__height__menuTopRow__phone:
    @js__length__icon +
    @js__margin__menuChild__narrow * 2;

// Arbitrary for now.
@js__height__audio: 64px;
@js__height__audioBanner__bottomRow: @js__height__audio / 2;
@js__height__audioSlider__bottomRow: @js__height__audio / 2;

// Includes menu and slider.
@js__height__aboveOverlay__phone:
    @js__height__menuTopRow__phone +
    @js__height__audioSlider__bottomRow;

// Includes menu, banner, and slider.
@js__height__menu__phone:
    @js__height__aboveOverlay__phone +
    @js__height__audioBanner__bottomRow;

@height__bottomRow:
    @js__height__audioBanner__bottomRow +
    @js__height__audioSlider__bottomRow;

@maxWidth__childAudio: 640px; // Arbitrary.

.Menu {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: @js__height__menu;

    .RM__phone
    & {
        height: @js__height__menu__phone;
    }
}

.MenuRow {
    z-index: @zIndex__menuField;
}

.MenuTopRow {
    position: relative;
    height: 100%;

    overflow: hidden;

    box-shadow: @boxShadow__menu;
    background-color: #8dd;

    transform: translateX(0);

    transition:
        margin @animationDuration__slow,
        max-width @animationDuration__slow;

    .RM__overlayHidden
    & {
        /**
         * When overlay is hidden, override the dynamic margins calculated by
         * JavaScript. Not happy about doing this, but I wasn't able to keep
         * the animation smooth in Safari any other way.
         */
        margin: 0 !important;
    }

    .RM__overlayShown
    &.width__mainColumn {
        max-width: @js__width__mini;
    }

    .RM__phone
    & {
        height: @js__height__menuTopRow__phone;
    }
}

.MenuTopRow,
.MenuTopRow__scoresTips {
    display: flex;
    align-items: center;
}

.MenuTopRow__child {
    height: 100%;
    flex-grow: 1;

    transition:
        min-width @animationDuration__fast,
        max-width @animationDuration__fast;
}

.MenuTopRow__titleTimer {
    position: relative;

    min-width: @js__minWidth__childTitle;
    max-width: 200px; // Arbitrary.

    overflow: hidden;

    .RM__titleInAudio
    & {
        /**
         * Don't bother to show if title in audio. Child component also will
         * not be rendered.
         */
        display: none;
    }
}

.MenuTopRow__titleTimer__child {

    .RM__phone
    & {
        transition: left @animationDuration__default;

        &:first-child {
            left: 0;
        }

        &:last-child {
            left: 100%;
        }
    }

    .RM__phone.RM__overlayShown
    &,
    .RM__phone.RM__song.RM__lyricExpanded
    & {

        &:first-child {
            left: -100%;
        }

        &:last-child {
            left: 0;
        }
    }
}

.MenuTopRow__audio {
    flex-grow: 2;

    margin: 0 @js__margin__menuChild;
    max-width: @maxWidth__childAudio;

    transition: margin @animationDuration__default;

    background-color: #8d8;

    .RM__laptop
    &,
    .RM__mini
    & {
        margin: 0 @js__margin__menuChild__narrow;
    }

    .RM__scoresTipsMain
    & {
        // If scores tips is hidden, remove audio subfield's right margin.
        margin-right: 0;
    }

    .RM__titleInAudio
    & {
        // If title is hidden, remove audio subfield's left margin.
        margin-left: 0;
    }

    .RM__overlayShown
    & {
        max-width: 100%;
        margin-right: 0;
    }

    .RM__overlayShown:not(.RM__phone)
    & {
        margin-left: 0;
    }

    .RM__mobile
    & {
        justify-content: flex-end;
    }

    min-width:
        @js__minWidth__audioBanner
        + @minWidth__audioButtons__minusPlayer
        + @js__length__iconLarge
        + @js__padding__audio * 3;

    box-sizing: border-box;

    .RM__tablet
    & {
        min-width:
        @js__minWidth__audioBanner
        + @minWidth__audioButtons__minusPlayer
        + @js__length__iconLarge__tablet
        + @js__padding__audio * 3;
    }

    .RM__mini
    & {
        min-width:
        @js__minWidth__audioBanner
        + @minWidth__audioButtons__minusPlayer
        + @js__length__iconLarge__mini
        + @js__padding__audio * 3;
    }

    .RM__phone
    & {
        min-width:
        @minWidth__audioButtons__minusPlayer
        + @js__length__icon
        + @js__padding__audio * 3;
    }
}

.MenuTopRow__scoresTips {

    .RM__scoresTipsMain
    & {
        /**
         * Don't bother to show if scores tips in main. Child component also
         * will not be rendered.
         */
        display: none;
    }

    min-width: @width__childScoresTips;

    .RM__tablet
    & {
        min-width: @width__childScoresTips__tablet;
    }

    .RM__mini
    & {
        min-width: @width__childScoresTips__mini;
    }
}

.widths__hiddenInOverlay {

    .RM__overlayShown
    & {
        width: 0;
        min-width: 0;
        max-width: 0;
    }
}

.MenuBottomRow {
    position: absolute;
    bottom: 0;
    height: @height__bottomRow;

    transition: bottom @animationDuration__default;

    .RM__overlayShown
    &,
    .RM__song.RM__lyricExpanded
    & {
        bottom: @js__height__audioBanner__bottomRow;
    }
}