// This value is used to determine whether to show the mobile wiki page.
@js__padding__popupContent__wide: 20px;

/**
 * Even though this size is based on annotation card width, it is now only
 * applied to the tips and title popups.
 */
@width__popupCard:
    @width__annotationCard
    + @padding__annotationCard * 2
    + @js__padding__popupContent__wide * 2;

@width__popupCard__mini:
    @width__annotationCard__mini
    + @padding__annotationCard * 2
    + @js__padding__popupContent__wide * 2;

@width__popupCard__phone:
    @width__annotationCard__phone
    + @padding__annotationCard * 2
    + @js__padding__popupContent__wide * 2;

.PopupView {
    position: relative;
}

.PopupView__fullSize {
    max-width: @js__width__laptop;

    // These calculations are just kind of arbitrary.
    width: ~"calc(100% - @{js__length__iconLarge} * 2 - @{js__padding__popupContent__wide} * 2)";
    height: ~"calc(100% - @{js__length__iconLarge} * 1.25)";

    .RM__mobile:not(.RM__tablet)
    & {
        width: 100%;
    }

    .RM__mini
    & {
        height: ~"calc(100% - @{js__length__iconLarge__mini})";
    }

    .RM__phone
    & {
        height: ~"calc(100% - @{js__length__icon})";
    }
}

.PopupView__cardSize {
    max-width: @width__popupCard;

    .RM__mini
    & {
        // Multiplier is .9, just like for lyric text in mini.
        max-width: @width__popupCard__mini;
    }

    .RM__phone
    & {
        // Multiplier is .98, just like for lyric text in phone.
        max-width: @width__popupCard__phone;
        padding: @js__margin__thin;
    }
}

.PopupView__bounceAnimate {

    .Popup__visible
    & {
        animation: bounceIn @animationDuration__slow;
    }

    .Popup__invisible
    &,
    .RM__overlayShown .Popup__notInOverlay
    & {
        animation: bounceOut @animationDuration__fast;
    }
}

.PopupView__shrinkAnimate {

    .Popup__visible
    & {
        animation: shrinkIn @animationDuration__slow;
    }

    .Popup__invisible
    &,
    .RM__overlayShown .Popup__notInOverlay
    & {
        animation: shrinkOut @animationDuration__fast;
    }
}

.PopupViewContent {
    position: relative;
    width: 100%;
    height: 100%;

    box-sizing: border-box;

    background-color: @bgColour__beforeSelected__odd;
}

.PopupViewContent__scrollIfFull {

    // Establish max height for popups that are not full size.
    overflow: scroll;
    max-height: ~"calc(100vh - @{js__height__menu} - @{js__margin__thin} * 2)";

    .RM__phone
    & {
        // Make room for popup buttons, which are at the bottom in phone.
        max-height: ~"calc(100vh - @{js__topOffsetTruncated__twoRowMenu__phone} - @{js__length__icon} * 1.25)";
    }
}

@padding__popupContent__narrow: 15px;

.PopupViewContent__narrowPadding {
    padding: @padding__popupContent__narrow;
}

.PopupViewContent__widePadding {
    // Wider padding to accommodate popup buttons.
    padding: @js__padding__popupContent__wide;
}
