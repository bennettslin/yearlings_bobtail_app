// TODO: Make popup mixin.
@overflow-margin-width: 5px;
@popup-button-length: 50px;

@popup-content-side-padding: 20px;
@full-subfield: @app-large-icon-diameter;
@mini-full-subfield: 10px;

.admin {
    .popup-content-wrapper {
        left: -@overflow-margin-width - @field-width - @field-padding;
        width: @field-width + (@overflow-margin-width * 2);

        &.annotation {
            top: 5vh;
            max-height: 40vh;
        }

        &.portal {
            top: 45vh;
            max-height: 40vh;
        }

        &.wiki {
            top: 50vh;
            height: 45vh;
        }
    }

    .popup-transition-group {
        position: fixed;
        z-index: @popup-container-z-index;
    }
}

.live {
    .popup-content-wrapper {

        &.dots {
            padding: 35px @popup-content-side-padding 20px;
        }

        &.annotation {
            padding: 20px @popup-content-side-padding;
        }

    }
}

.popup-field {
    // border: 2px solid green;
    position: absolute;
    width: 100%;
    height: 100%;

    // TODO: May need styling here for Safari.
    .subfield {
    }

    .annotation-subfield {
    }

    .dots-subfield {
    }
}

.popup-transition-group:not(.overview) {
    position: absolute;
    // border: 2px solid red;
    top: 0;
    left: 0;

    width: 100%;
    height: 100%;

    display: flex;
    justify-content: center;
    align-items: center;
}

.popup-transition-group {
    box-sizing: border-box;
}

.popup-content-wrapper {
    z-index: @popup-content-z-index;

    /**
     * If changing these duration values, don't forget to also change
     * transitionEnterTimeout and transitionLeaveTimeout in popup.jsx.
     */
    &[class*="animation-enter"] {
        transform: scale(0);

        &[class*="animation-enter-active"] {
            animation: popupGrow 0.25s;
            transform: scale(1);
        }
    }

    &[class*="animation-leave"] {
        transform: scale(1);

        &[class*="animation-leave-active"] {
            animation: popupShrink 0.15s;
            transform: scale(0);
        }
    }

    position: absolute;
    background-color: white;
    box-shadow: -2px 2px 8px 8px @box-shadow-colour;

    &.annotation {
        max-width: 400px;
    }

    &.wiki {
        width: ~"calc(100% - @{full-subfield} * 2.5)";
        max-width: @laptop-max-width;

        height: ~"calc(100% - @{full-subfield} * 2)";
    }

    .popup-button {
        position: absolute;
        height: @app-large-icon-diameter;
        width: @app-large-icon-diameter;

        display: flex;
        justify-content: center;
        align-items: center;

        .popup-button-interactable {
            position: absolute;
            width: 100%;
            height: 100%;
            z-index: @popup-interactable-z-index;
        }

        &.close-button {
            top: 0;
            right: 0;
        }

        &.side-button {
            top: 50%;
            transform: translateY(-50%);

            border-radius: 50%;
            box-shadow: -1px 1px 2px 2px @box-shadow-colour;
            background-color: #dfd;
        }

        &.previous-button {
            left: -@app-large-icon-diameter * 0.85;
        }

        &.next-button {
            right: -@app-large-icon-diameter * 0.85;
        }
    }
}

.full-popup-subfield {
    .popup-content-wrapper {
        box-sizing: border-box;
        box-shadow: -2px 2px 8px 8px @dark-box-shadow-colour;
        z-index: @wiki-popup-content-z-index;
    }
}

.monitor-width, .laptop-width, .tablet-width {
    .popup-content-wrapper.wiki {
        .popup-button.close-button {
            top: -@app-large-icon-diameter;

            // Duplicates annotation side button styles.
            border-radius: 50%;
            box-shadow: -1px 1px 2px 2px @box-shadow-colour;
            background-color: #fdd;

            top: -@app-large-icon-diameter * 0.7;
            right: -@app-large-icon-diameter * 0.7;
        }
    }
}

.mini-width, .phone-width {

    .popup-content-wrapper {
        &.wiki {
            width: ~"calc(100% - @{mini-full-subfield} * 2)";
            height: ~"calc(100% - @{app-icon-diameter} * 2)";

        }

        &.dots {
            padding: 20px @popup-content-side-padding;
        }

        .popup-button {

            &.close-button {
                display: none;
            }
        }
    }

    &.phone-width {
        .popup-content-wrapper {
            &.wiki {
                // Make side margin in phone just that much thinner.
                width: ~"calc(100% - @{mini-full-subfield})";
            }
        }

        .heightless-lyric {
            .popup-content-wrapper {
                &.wiki {
                    height: ~"calc(100% - @{mini-full-subfield})";
                }
            }
        }
    }

    // Reverse width and height when not enough height.
    .heightless-lyric {
        .popup-content-wrapper {
            &.wiki {
                height: ~"calc(100% - @{mini-full-subfield} * 2)";
                width: ~"calc(100% - @{app-icon-diameter} * 2)";
            }
        }
    }
}
