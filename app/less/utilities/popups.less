@popup-content-side-padding: 20px;
@full-subfield: @app-large-icon-diameter;
@mini-full-subfield: 10px;

@popup-box-shadow: -2px 2px 8px 8px @box-shadow-colour;
@popup-darker-box-shadow: -2px 2px 8px 8px @darker-box-shadow-colour;
@popup-button-box-shadow: -1px 1px 2px 2px @box-shadow-colour;

@popup-button-multiplier: 0.72;

.popup-field, .popup-field .subfield, .popup-transition-group {
    position: absolute;
    width: 100%;
    height: 100%;
}

.popup-field {
    .subfield {
        top: 0;
        left: 0;
    }
}

.popup-transition-group {
    box-sizing: border-box;

    &:not(.overview):not(.audio) {
        top: 0;
        left: 0;

        display: flex;
        justify-content: center;
        align-items: center;
    }

    &.audio {
        position: relative;
    }
}

.popup-wrapper {
    position: relative;
    z-index: @popup-content-z-index;

    /**
     * If changing these duration values, don't forget to also change
     * transitionEnterTimeout and transitionLeaveTimeout in popup.jsx.
     */

    &.overview, &.annotation {
        &[class*="animation-enter"] {
            transform: scale(0);

            &[class*="animation-enter-active"] {
                animation: popupGrow 0.25s;
                transform: scale(1);
            }
        }

        &[class*="animation-leave"] {
            transform: scale(1);

            &[class*="animation-leave-active"] {
                animation: popupShrink 0.15s;
                transform: scale(0);
            }
        }
    }

    &.wiki {
        &[class*="animation-enter"] {
            opacity: 0;
            transform: scale(1.3);

            &[class*="animation-enter-active"] {
                animation: overlaidPopupIn 0.25s;
                opacity: 1;
                transform: scale(1);
            }
        }

        &[class*="animation-leave"] {
            opacity: 1;
            transform: scale(1);

            &[class*="animation-leave-active"] {
                animation: overlaidPopupOut 0.15s;
                opacity: 0;
                transform: scale(1.3);
            }
        }
    }

    &.wiki, &.score {
        width: ~"calc(100% - @{full-subfield} * 2.5)";
        max-width: @laptop-max-width;

        height: ~"calc(100% - @{full-subfield} * 2)";
    }

    &.annotation {
        width: 400px;
        max-width: 400px;
    }
}

// Multiplier is .95, just like for lyric text in mini.
.mini-width {
    .popup-wrapper {
        &.annotation {
            width: 380px;
            max-width: 380px;
        }
    }
}

// Multiplier is .9, just like for lyric text in phone.
.phone-width {
    .popup-wrapper {
        &.annotation {
            width: 360px;
            max-width: 360px;
        }
    }
}

.popup-content-wrapper {
    box-shadow: @popup-box-shadow;
    background-color: white;
    position: relative;

    &:not(.overview) {
        width: 100%;
        height: 100%;
    }

    &.annotation {
        padding: 20px @popup-content-side-padding;
    }
}

.popup-button-block {
    position: absolute;

    .button-icon {
        box-shadow: @popup-button-box-shadow;
    }

    &.close-position {
        top: -@app-large-icon-diameter * @popup-button-multiplier;
        left: -@app-large-icon-diameter * @popup-button-multiplier;
        // border-radius: 50%;

        .button-icon {
            background-color: #fdd;
        }
    }

    &.side-position {
        top: @app-large-icon-diameter * 0.2;

        .button-icon {
            background-color: #dfd;
        }
    }

    &.previous-position {
        left: -@app-large-icon-diameter * @popup-button-multiplier;
    }

    &.next-position {
        right: -@app-large-icon-diameter * @popup-button-multiplier;
    }

    &.shadow {
        display: block;
        overflow: hidden;
        box-shadow: @popup-box-shadow;
        border-radius: 50%;

        &.close-position {
            box-shadow: @popup-darker-box-shadow;
        }
    }
}

.is-mobile {

    &.phone-width, .side-annotation {

        .popup-button-block {
            &.side-position {
                // Override default styling.
                transform: none;
                top: auto;
                bottom: -@app-icon-diameter * @popup-button-multiplier;
            }

            &.previous-position {
                left: @app-icon-diameter * 0.2;
            }

            &.next-position {
                right: @app-icon-diameter * 0.2;
            }
        }
    }

    &:not(.tablet-width) {
        .popup-wrapper {
            &.wiki, &.score {
                width: ~"calc(100% - @{mini-full-subfield} * 2)";
                height: ~"calc(100% - @{app-icon-diameter} * 2)";
            }

            .popup-button-block {
                &.close-position {
                    display: none;
                }
            }
        }

        &.phone-width {
            .popup-wrapper {
                &.wiki, &.score, &.annotation {
                    // Make side margin in phone just that much thinner.
                    width: ~"calc(100% - @{mini-full-subfield})";
                }
            }

            .heightless-lyric {
                .popup-wrapper {
                    &.wiki, &.score {
                        height: ~"calc(100% - @{mini-full-subfield})";
                    }
                }
            }
        }

        // Reverse width and height when width is greater than height.
        .heightless-lyric {
            .popup-wrapper {
                &.wiki, &.score {
                    width: ~"calc(100% - @{app-icon-diameter} * 2)";
                    height: ~"calc(100% - @{mini-full-subfield} * 2)";
                }
            }
        }
    }
}
