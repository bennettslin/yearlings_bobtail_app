@popup-content-side-padding: 20px;
@full-subfield: @app-large-icon-diameter;
@mini-full-subfield: 10px;

.popup-field {
    position: absolute;
    width: 100%;
    height: 100%;

    .subfield {
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
    }
}

.popup-transition-group {
    box-sizing: border-box;

    &:not(.overview) {
        position: absolute;
        top: 0;
        left: 0;

        width: 100%;
        height: 100%;

        display: flex;
        justify-content: center;
        align-items: center;
    }
}

.popup-content-wrapper {

    // Needed for positioning in Safari.
    position: relative;

    &.overview {
        position: absolute;
    }

    z-index: @popup-content-z-index;

    box-shadow: -2px 2px 8px 8px @box-shadow-colour;
    background-color: white;

    /**
     * If changing these duration values, don't forget to also change
     * transitionEnterTimeout and transitionLeaveTimeout in popup.jsx.
     */
    &[class*="animation-enter"] {
        transform: scale(0);

        &[class*="animation-enter-active"] {
            animation: popupGrow 0.25s;
            transform: scale(1);
        }
    }

    &[class*="animation-leave"] {
        transform: scale(1);

        &[class*="animation-leave-active"] {
            animation: popupShrink 0.15s;
            transform: scale(0);
        }
    }

    &.dots {
        padding: 35px @popup-content-side-padding 20px;
    }

    &.annotation {
        width: 400px;
        max-width: 400px;
        padding: 20px @popup-content-side-padding;
    }

    &.wiki, &.score {
        width: ~"calc(100% - @{full-subfield} * 2.5)";
        max-width: @laptop-max-width;

        height: ~"calc(100% - @{full-subfield} * 2)";
    }

    .popup-button {
        position: absolute;
        height: @app-large-icon-diameter;
        width: @app-large-icon-diameter;

        display: flex;
        justify-content: center;
        align-items: center;

        .popup-button-interactable {
            position: absolute;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            z-index: @popup-interactable-z-index;
        }

        &.close-button {
            top: 0;
            right: 0;
        }

        &.side-button {
            top: 50%;
            transform: translateY(-50%);

            border-radius: 50%;
            box-shadow: -1px 1px 2px 2px @box-shadow-colour;
            background-color: #dfd;
        }

        &.previous-button {
            left: -@app-large-icon-diameter * 0.85;
        }

        &.next-button {
            right: -@app-large-icon-diameter * 0.85;
        }
    }
}

.full-popup-subfield {
    .popup-content-wrapper {
        box-sizing: border-box;
        box-shadow: -2px 2px 8px 8px @dark-box-shadow-colour;
        z-index: @wiki-popup-content-z-index;
    }
}

.monitor-width, .laptop-width, .tablet-width {
    .popup-content-wrapper {
        &.wiki, &.score {
            .popup-button.close-button {
                top: -@app-large-icon-diameter;

                // Duplicates annotation side button styles.
                border-radius: 50%;
                box-shadow: -1px 1px 2px 2px @box-shadow-colour;
                background-color: #fdd;

                top: -@app-large-icon-diameter * 0.7;
                right: -@app-large-icon-diameter * 0.7;
            }
        }
    }
}

.mini-width, .phone-width {
    .popup-content-wrapper {
        &.wiki, &.score {
            width: ~"calc(100% - @{mini-full-subfield} * 2)";
            height: ~"calc(100% - @{app-icon-diameter} * 2)";

        }

        &.dots {
            padding: 20px @popup-content-side-padding;
        }

        .popup-button {

            &.close-button {
                display: none;
            }
        }
    }

    &.phone-width {
        .popup-content-wrapper {
            &.wiki, &.score {
                // Make side margin in phone just that much thinner.
                width: ~"calc(100% - @{mini-full-subfield})";
            }
        }

        .heightless-lyric {
            .popup-content-wrapper {
                &.wiki, &.score {
                    height: ~"calc(100% - @{mini-full-subfield})";
                }
            }
        }
    }

    // Reverse width and height when not enough height.
    .heightless-lyric {
        .popup-content-wrapper {
            &.wiki, &.score {
                height: ~"calc(100% - @{mini-full-subfield} * 2)";
                width: ~"calc(100% - @{app-icon-diameter} * 2)";
            }
        }
    }
}
