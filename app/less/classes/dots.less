@dot-container-diameter: 64px;
@dot-container-padding: @dot-container-diameter / 6;

@dot-container-phone-diameter: @app-large-icon-diameter * 0.95;
@dot-container-phone-padding: @app-large-icon-diameter / 7;

@dot-border: 1px;

@transition-duration-fast: 0.15s;

.dot {
    .animated-background {
        border-radius: 50%;
    }

    &:not(.dot-stanza-button) .animated-background {
        // TODO: Key styling.
        &.portal { background-color: @portal-dot-colour; }
        &.observation { background-color: @observation-dot-colour; }
        &.backstory { background-color: @backstory-dot-colour; }
        &.reference { background-color: @reference-dot-colour; }
        &.pun { background-color: @pun-dot-colour; }
        &.narrative { background-color: @narrative-dot-colour; }
        &.songwriting { background-color: @songwriting-dot-colour; }
        &.afterword { background-color: @afterword-dot-colour; }
    }
}

.dots-block {
    display: flex;
    width: auto;
    height: 100%;
}

/**
 * All dot backgrounds in lyrics and annotation cards, except portal annotation
 * cards.
 */
.text-anchor-block, .annotation-card:not(.portal) {
    .animated-background {

        // FIXME: Animation jankiness is due to the transform, which is expensive.
        transition: margin @transition-duration-fast,
                    width @transition-duration-fast,
                    border @transition-duration-fast,
                    transform @transition-duration-fast,
                    background-color @transition-duration-fast;
        transform: scale(0);
        width: 0;
    }
}

.dots-section {
    // Dots section and dot stanzas.
    .dot .animated-background {
        transition: background-color @transition-duration-fast;
    }
}

.dots-section, .portals-block {
    .dot .animated-background {
        border: @dot-border solid @dot-border-colour;
    }
}

// Undo reverse dot order caused by right column's rtl direction.
.line.right {
    .dots-block {
        flex-direction: row-reverse;
    }
}

.dots-subfield {
    .dot {
        width: @dot-container-diameter;
        height: @dot-container-diameter;
    }

    .dots-block {
        display: flex;
        justify-content: center;
        flex-wrap: wrap;

        // Monitor through mini will have four dots per row.
        // FIXME: Not sure why 3 is the minimum multiplier for border...?
        width: 4 * (@dot-container-diameter + 2 * @dot-container-padding + 3 * @dot-border);
    }

    .dot-container {
        display: flex;
        flex-direction: column-reverse;
        padding: @dot-container-padding;
        box-sizing: border-box;
    }
}

.dots-section {
    padding: 10px;

    .text-shadow-mixin(#def);

    .dot-container {
        position: relative;
    }

    .dot.deselected {
        .animated-background {
            background-color: @deselected-dot-colour;
        }
    }
}

.dot-description {
    position: absolute;

    width: @dot-container-diameter + @dot-border * 2;
    height: @dot-container-diameter + @dot-border * 2;
    border-radius: 50%;

    display: flex;
    justify-content: center;
    align-items: center;

    text-align: center;
    font-size: .6em;

    opacity: 0;
    transition: opacity 0.2s;

    &:hover, &.interactivated {
        opacity: 1;
    }
}

.dot-section-anchor {
    padding-top: 5px;
    text-align: center;
    font-size: 0.75em;
    transition: box-shadow 0.2s;
    cursor: pointer;

    .text-span {
        user-select: none;
    }
}

.phone-width {
    .dots-subfield {

        .dot {
            width: @dot-container-phone-diameter;
            height: @dot-container-phone-diameter;
        }

        box-shadow: -1px 1px 4px 4px @box-shadow-colour;

        .dots-block {
            // Phone will have four dots per row.
            width: 4 * (@dot-container-phone-diameter + 2 * @dot-container-phone-padding + 3 * @dot-border);
        }

        .dot-container {
            padding: @dot-container-phone-padding;
        }

        .dot-description {
            width: @dot-container-phone-diameter + @dot-border * 2;
            height: @dot-container-phone-diameter + @dot-border * 2;
        }
    }
}
