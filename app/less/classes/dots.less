@dot-interactable-diameter: 64px;
@dot-container-padding: @dot-interactable-diameter / 6;

@dot-interactable-phone-diameter: @app-large-icon-diameter * 0.95;
@dot-container-phone-padding: @app-large-icon-diameter / 7;

@dot-border: 1px;

.dots-block {
    .dot-diameter-mixin;
    display: flex;
    width: auto;
    height: 100%;

    .dot {
        &.animatable {
            transition: width 0.15s, transform 0.15s;

            &.is-present {
                transform: scale(1);
            }

            &.is-absent {
                transform: scale(0);
                width: 0;
            }
        }
    }

    &.interactable {

        .dot-container {
            position: relative;
            //
            // &.dot-enabled {
            //
            //     &.interacted {
            //
            //         .dot {
            //             animation: transformLightBounce 0.15s;
            //             background-color: orange;
            //         }
            //     }
            // }
        }

        .dot {
            // TODO: Improve state styling.
            &.background { opacity: 0.35; }
            &.dot-stanza-disabled { background-color: lightGray; }
            &.deselected { background-color: lightGray; }

            // TODO: Obviously.
            &.access-outlined {
                background-color: violet;
            }
        }
    }
}

.dot {
    border: @dot-border solid #aaa;

    &:not(:last-child) {
        margin-right: 1px;
    }
}

// Undo reverse dot order caused by right column's rtl direction.
.right {
    .dots-block {
        flex-direction: row-reverse;
    }
}

.dot-interactable {
    // These are overridden by dots in subfield.
    width: 100%;
    height: 100%;
    top: 0;

    // TODO: Needs to be bigger because of dot border.

    z-index: @dot-interactable-z-index;
    position: absolute;
    border-radius: 50%;

    // FIXME: Not great.
    &:active { background-color: red; opacity: 0.2; }
}

.dots-subfield {
    .dot-diameter-mixin(@dot-interactable-diameter, 0);

    .dots-block {
        display: flex;
        justify-content: center;
        flex-wrap: wrap;

        // Monitor through mini will have four dots per row.
        // FIXME: Not sure why 3 is the minimum multiplier for border...?
        width: 4 * (@dot-interactable-diameter + 2 * @dot-container-padding + 3 * @dot-border);
    }

    // FIXME: This should accommodate touch size.
    .dot-text {
        // padding-bottom: 5px;
    }

    .dot-container {
        display: flex;
        flex-direction: column-reverse;
        padding: @dot-container-padding;
        box-sizing: border-box;
    }

    .dot-interactable {
        width: @dot-interactable-diameter + @dot-border * 2;
        height: @dot-interactable-diameter + @dot-border * 2;
        // top: auto;
        top: @dot-container-padding;
    }
}

.dots-section {
    padding: 10px;
}

.dot-description {
    background-color: rgba(255, 255, 255, 0.8);
    width: @dot-interactable-diameter + @dot-border * 2;
    height: @dot-interactable-diameter + @dot-border * 2;

    display: flex;
    justify-content: center;
    align-items: center;

    text-align: center;

    opacity: 0;
    transition: opacity 0.2s;
}

.dot-text-container:hover + .dot .dot-description, .dot-description.interactivated {
    opacity: 1;
}

.dot-text-container {
    text-align: center;
    font-size: 0.75em;
}

.dot-text-interactable {
    transition: box-shadow 0.2s;

    &.interactivated {
        box-shadow: inset 0 0 5px @darker-box-shadow-colour;
    }
}

.phone-width {
    .dots-subfield {
        .dot-diameter-mixin(@dot-interactable-phone-diameter, 0);

        box-shadow: -1px 1px 4px 4px @box-shadow-colour;

        .dots-block {
            // Phone will have four dots per row.
            width: 4 * (@dot-interactable-phone-diameter + 2 * @dot-container-phone-padding + 3 * @dot-border);
        }

        .dot-container {
            padding: @dot-container-phone-padding;
        }

        .dot-interactable {
            width: @dot-interactable-phone-diameter + @dot-border * 2;
            height: @dot-interactable-phone-diameter + @dot-border * 2;
            top: @dot-container-phone-padding;
        }

        .dot-description {
            width: @dot-interactable-phone-diameter + @dot-border * 2;
            height: @dot-interactable-phone-diameter + @dot-border * 2;
        }
    }
}

.dot {
    border-radius: 50%;
    transition: background-color 0.15s;

    // TODO: Key styling.
    &.songwriting { background-color: @songwriting-dot-colour; }
    &.narrative { background-color: @narrative-dot-colour; }
    &.pun { background-color: @pun-dot-colour; }
    &.reference { background-color: @reference-dot-colour; }
    &.backstory { background-color: @backstory-dot-colour; }
    &.observation { background-color: @observation-dot-colour; }
    &.portal { background-color: @portal-dot-colour; }
    &.afterword { background-color: @afterword-dot-colour; }

    .dot-text {
        font-size: .6em;
    }
}
