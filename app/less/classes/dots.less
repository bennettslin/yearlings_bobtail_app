@dot-container-diameter: 64px;
@dot-container-padding: @dot-container-diameter / 6;

@dot-container-phone-diameter: @app-large-icon-diameter * 0.95;
@dot-container-phone-padding: @app-large-icon-diameter / 7;

@dot-border: 1px;

@transition-duration-fast: 0.15s;

.dot {
    &:not(.button), & .button-background {
        border-radius: 50%;

        // Dots section and dot stanzas.
        &.button-background {
            border: @dot-border solid @dot-border-colour;
        }
    }

    &:not(.button), &:not(.dots-stanza-button) .button-background {
        // TODO: Key styling.
        &.portal { background-color: @portal-dot-colour; }
        &.observation { background-color: @observation-dot-colour; }
        &.backstory { background-color: @backstory-dot-colour; }
        &.reference { background-color: @reference-dot-colour; }
        &.pun { background-color: @pun-dot-colour; }
        &.narrative { background-color: @narrative-dot-colour; }
        &.songwriting { background-color: @songwriting-dot-colour; }
        &.afterword { background-color: @afterword-dot-colour; }
    }
}

// This is the one source of truth for how dot stanza keys are ordered!
.live-app.portal .dots-stanza:not(.selected) .button-background.portal {
    background-color: @portal-dot-colour;
}
.live-app.observation .dots-stanza:not(.selected) .button-background.observation {
    background-color: @observation-dot-colour;
}
.live-app.backstory .dots-stanza:not(.selected) .button-background.backstory {
    background-color: @backstory-dot-colour;
}
.live-app.reference .dots-stanza:not(.selected) .button-background.reference {
    background-color: @reference-dot-colour;
}
.live-app.pun .dots-stanza:not(.selected) .button-background.pun {
    background-color: @pun-dot-colour;
}
.live-app.narrative .dots-stanza:not(.selected) .button-background.narrative {
    background-color: @narrative-dot-colour;
}
.live-app.songwriting .dots-stanza:not(.selected) .button-background.songwriting {
    background-color: @songwriting-dot-colour;
}
.live-app.afterword .dots-stanza:not(.selected) .button-background.afterword {
    background-color: @afterword-dot-colour;
}

.dots-block {
    display: flex;
    width: auto;
    height: 100%;
}

.live-app.narrative .dot.narrative,
.live-app.backstory .dot.backstory,
.live-app.observation .dot.observation,
.live-app.pun .dot.pun,
.live-app.reference .dot.reference,
.live-app.songwriting .dot.songwriting,
.live-app.portal .dot.portal,
.live-app.afterword .dot.afterword {

    transform: scale(1);
    border: @dot-border solid @dot-border-colour;

    &:not(:last-child) {
        margin-right: 1px;
    }

    &.in-lyric {
        width: @lyric-anchor-dot-diameter;
        height: @lyric-anchor-dot-diameter;
    }

    &.in-card {
        width: @annotation-dot-diameter;
        height: @annotation-dot-diameter;
    }
}

.anchor-block, .annotation-card {
    .dot:not(.button) {

        // FIXME: Animation jankiness is due to the transform, which is expensive.
        transition: margin @transition-duration-fast,
                    width @transition-duration-fast,
                    border @transition-duration-fast,
                    transform @transition-duration-fast,
                    background-color @transition-duration-fast;
        transform: scale(0);
        width: 0;
    }
}

.dots-section {
    .dot .button-background {
        transition: background-color @transition-duration-fast;
    }
}

.dots-stanza {
    padding-bottom: 5px;

    .button {
        transition: width 0.2s, height 0.2s;
    }
    &.stanza-block {
        transition: margin-top 0.2s, margin-left 0.2s;

        .stanza {
            position: relative;

            .underline-bar {
                height: 25%;
                bottom: -10%;
            }
        }
    }
    .dot .button-background {
        transition: background-color @transition-duration-fast, border @transition-duration-fast;
    }
}

// TODO: Classes show and hide dots stanza.
.live-app.narrative .dots-stanza.narrative,
.live-app.backstory .dots-stanza.backstory,
.live-app.observation .dots-stanza.observation,
.live-app.pun .dots-stanza.pun,
.live-app.reference .dots-stanza.reference,
.live-app.songwriting .dots-stanza.songwriting,
.live-app.portal .dots-stanza.portal,
.live-app.afterword .dots-stanza.afterword {

}

.dots-stanza-hidden {
    .button {
        width: 0;
        height: 0;
    }
    &.stanza-block.dots-stanza {
        margin-left: 0;
    }
    .dot .button-background {
        border: 0;
    }
}

.dots-stanza.dots-stanza-shown {
    margin-top: @lyrics-unit-margin;
}

// Undo reverse dot order caused by right column's rtl direction.
.line.right {
    .dots-block {
        flex-direction: row-reverse;
    }
}

.dots-subfield {
    .dot {
        width: @dot-container-diameter;
        height: @dot-container-diameter;
    }

    .dots-block {
        display: flex;
        justify-content: center;
        flex-wrap: wrap;

        // Monitor through mini will have four dots per row.
        // FIXME: Not sure why 3 is the minimum multiplier for border...?
        width: 4 * (@dot-container-diameter + 2 * @dot-container-padding + 3 * @dot-border);
    }

    .dot-container {
        display: flex;
        flex-direction: column-reverse;
        padding: @dot-container-padding;
        box-sizing: border-box;
    }
}

.dots-section {
    padding: 10px;

    .text-shadow-mixin(#def);

    .dot-container {
        position: relative;
    }

    .dot.deselected {
        .button-background {
            background-color: @deselected-dot-colour;
        }
    }
}

.dot-description {
    position: absolute;

    width: @dot-container-diameter + @dot-border * 2;
    height: @dot-container-diameter + @dot-border * 2;
    border-radius: 50%;

    display: flex;
    justify-content: center;
    align-items: center;

    text-align: center;
    font-size: .6em;

    opacity: 0;
    transition: opacity 0.2s;

    &:hover, &.interactivated {
        opacity: 1;
    }
}

.dot-key {
    padding-top: 5px;
    text-align: center;
    font-size: 0.75em;
    transition: box-shadow 0.2s;
    cursor: pointer;

    .text-span {
        user-select: none;
    }
}

.phone-width {
    .dots-subfield {

        .dot {
            width: @dot-container-phone-diameter;
            height: @dot-container-phone-diameter;
        }

        box-shadow: -1px 1px 4px 4px @box-shadow-colour;

        .dots-block {
            // Phone will have four dots per row.
            width: 4 * (@dot-container-phone-diameter + 2 * @dot-container-phone-padding + 3 * @dot-border);
        }

        .dot-container {
            padding: @dot-container-phone-padding;
        }

        .dot-description {
            width: @dot-container-phone-diameter + @dot-border * 2;
            height: @dot-container-phone-diameter + @dot-border * 2;
        }
    }
}
